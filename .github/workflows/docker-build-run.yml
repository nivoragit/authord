name: Build, Run & Scan Docker Image

on:
  push:
    branches: [ publish-single ]
  pull_request:
    branches: [ publish-single ]

permissions:
  contents: read
  packages: write   # needed for GHCR push with GITHUB_TOKEN

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/myapp

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      # Run the CLI tool inside container
      - name: Run CLI command
        run: |
          # Example: run --help to confirm it works
          docker run --name myapp_container myapp:latest --help

      # Show logs if previous step failed
      - name: Logs (on failure)
        if: failure()
        run: docker logs myapp_container || true

      # Remove container (if exists)
      - name: Cleanup container
        if: always()
        run: docker rm -f myapp_container || true

      # Trivy full scan: vulns, secrets, misconfigs
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: myapp:latest
          format: table
          vuln-type: 'os,library'
          scanners: 'vuln,secret,config'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          exit-code: '0'     # set to '1' to fail on findings
          ignore-unfixed: true

      # Login & push to GHCR only on branch pushes (not PRs)
      - name: Log in to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag & push to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker tag myapp:latest $IMAGE_NAME:scan
          docker push $IMAGE_NAME:scan
